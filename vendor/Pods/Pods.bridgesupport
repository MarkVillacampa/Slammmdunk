<?xml version='1.0'?>
<signatures version='1.0'>
<struct type='{_DTVersion=&quot;major&quot;i&quot;minor&quot;i&quot;point&quot;i}' name='DTVersion'>
<field type='i' declared_type='NSInteger' name='major'/>
<field type='i' declared_type='NSInteger' name='minor'/>
<field type='i' declared_type='NSInteger' name='point'/>
</struct>
<struct type='{NILinkedListNode=&quot;object&quot;@&quot;prev&quot;^{NILinkedListNode}&quot;next&quot;^{NILinkedListNode}}' name='NILinkedListNode'>
<field type='@' declared_type='id' name='object'/>
<field type='^{NILinkedListNode=@^{NILinkedListNode}^{NILinkedListNode}}' declared_type='struct NILinkedListNode*' name='prev'/>
<field type='^{NILinkedListNode=@^{NILinkedListNode}^{NILinkedListNode}}' declared_type='struct NILinkedListNode*' name='next'/>
</struct>
<constant type='@' declared_type='NSString*' name='DTAttachmentParagraphSpacingAttribute'/>
<constant type='@' declared_type='NSString*' name='DTBackgroundColorAttribute'/>
<constant type='@' declared_type='NSString*' name='DTDefaultFirstLineHeadIndent'/>
<constant type='@' declared_type='NSString*' name='DTDefaultFontFamily'/>
<constant type='@' declared_type='NSString*' name='DTDefaultHeadIndent'/>
<constant type='@' declared_type='NSString*' name='DTDefaultLineHeightMultiplier'/>
<constant type='@' declared_type='NSString*' name='DTDefaultLinkColor'/>
<constant type='@' declared_type='NSString*' name='DTDefaultLinkDecoration'/>
<constant type='@' declared_type='NSString*' name='DTDefaultListIndent'/>
<constant type='@' declared_type='NSString*' name='DTDefaultStyleSheet'/>
<constant type='@' declared_type='NSString*' name='DTDefaultTextAlignment'/>
<constant type='@' declared_type='NSString*' name='DTDefaultTextColor'/>
<constant type='@' declared_type='NSString*' name='DTFieldAttribute'/>
<constant type='@' declared_type='NSString*' name='DTGUIDAttribute'/>
<constant type='@' declared_type='NSString*' name='DTHeaderLevelAttribute'/>
<constant type='@' declared_type='NSString*' name='DTHorizontalRuleStyleAttribute'/>
<constant type='@' declared_type='NSString*' name='DTLinkAttribute'/>
<constant type='@' declared_type='NSString*' name='DTLinkButtonDidHighlightNotification'/>
<constant type='@' declared_type='NSString*' name='DTMaxImageSize'/>
<constant type='@' declared_type='NSString*' name='DTPreserveNewlinesAttribute'/>
<constant type='@' declared_type='NSString*' name='DTShadowsAttribute'/>
<constant type='@' declared_type='NSString*' name='DTStrikeOutAttribute'/>
<constant type='@' declared_type='NSString*' name='DTTextBlocksAttribute'/>
<constant type='@' declared_type='NSString*' name='DTTextListsAttribute'/>
<constant type='B' declared_type='BOOL' name='NIDebugAssertionsShouldBreak'/>
<constant type='@' declared_type='NSString*' name='NIImageErrorKey' const='true'/>
<constant type='i' declared_type='NSInteger' name='NIMaxLogLevel'/>
<constant type='@' declared_type='NSString*' name='NINimbusErrorDomain' const='true'/>
<constant type='@' declared_type='NSString*' name='NSAttachmentAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSBaseURLDocumentOption'/>
<constant type='@' declared_type='NSString*' name='NSTextEncodingNameDocumentOption'/>
<constant type='@' declared_type='NSString*' name='NSTextSizeMultiplierDocumentOption'/>
<string_constant nsstring='true' value=' ' name='UNICODE_LINE_FEED'/>
<string_constant nsstring='true' value='￼' name='UNICODE_OBJECT_PLACEHOLDER'/>
<enum value='16777215.0f' name='CGFLOAT_OPEN_HEIGHT'/>
<enum value='0' name='DTCSSListStylePositionInherit'/>
<enum value='1' name='DTCSSListStylePositionInside'/>
<enum value='2147483647' name='DTCSSListStylePositionInvalid'/>
<enum value='2' name='DTCSSListStylePositionOutside'/>
<enum value='2' name='DTCSSListStyleTypeCircle'/>
<enum value='3' name='DTCSSListStyleTypeDecimal'/>
<enum value='4' name='DTCSSListStyleTypeDecimalLeadingZero'/>
<enum value='5' name='DTCSSListStyleTypeDisc'/>
<enum value='13' name='DTCSSListStyleTypeImage'/>
<enum value='0' name='DTCSSListStyleTypeInherit'/>
<enum value='2147483647' name='DTCSSListStyleTypeInvalid'/>
<enum value='9' name='DTCSSListStyleTypeLowerAlpha'/>
<enum value='10' name='DTCSSListStyleTypeLowerLatin'/>
<enum value='1' name='DTCSSListStyleTypeNone'/>
<enum value='11' name='DTCSSListStyleTypePlus'/>
<enum value='6' name='DTCSSListStyleTypeSquare'/>
<enum value='12' name='DTCSSListStyleTypeUnderscore'/>
<enum value='7' name='DTCSSListStyleTypeUpperAlpha'/>
<enum value='8' name='DTCSSListStyleTypeUpperLatin'/>
<enum value='2' name='DTHTMLElementDisplayStyleBlock'/>
<enum value='0' name='DTHTMLElementDisplayStyleInline'/>
<enum value='3' name='DTHTMLElementDisplayStyleListItem'/>
<enum value='1' name='DTHTMLElementDisplayStyleNone'/>
<enum value='1' name='DTHTMLElementFloatStyleLeft'/>
<enum value='0' name='DTHTMLElementFloatStyleNone'/>
<enum value='2' name='DTHTMLElementFloatStyleRight'/>
<enum value='0' name='DTHTMLElementFontVariantInherit'/>
<enum value='1' name='DTHTMLElementFontVariantNormal'/>
<enum value='2' name='DTHTMLElementFontVariantSmallCaps'/>
<enum value='4' name='DTTextAttachmentTypeGeneric'/>
<enum value='2' name='DTTextAttachmentTypeIframe'/>
<enum value='0' name='DTTextAttachmentTypeImage'/>
<enum value='3' name='DTTextAttachmentTypeObject'/>
<enum value='1' name='DTTextAttachmentTypeVideoURL'/>
<enum value='0' name='DTTextAttachmentVerticalAlignmentBaseline'/>
<enum value='3' name='DTTextAttachmentVerticalAlignmentBottom'/>
<enum value='2' name='DTTextAttachmentVerticalAlignmentCenter'/>
<enum value='1' name='DTTextAttachmentVerticalAlignmentTop'/>
<enum value='20000' name='NIIOS_2_0'/>
<enum value='20100' name='NIIOS_2_1'/>
<enum value='20200' name='NIIOS_2_2'/>
<enum value='30000' name='NIIOS_3_0'/>
<enum value='30100' name='NIIOS_3_1'/>
<enum value='30200' name='NIIOS_3_2'/>
<enum value='40000' name='NIIOS_4_0'/>
<enum value='40100' name='NIIOS_4_1'/>
<enum value='40200' name='NIIOS_4_2'/>
<enum value='40300' name='NIIOS_4_3'/>
<enum value='50000' name='NIIOS_5_0'/>
<enum value='1' name='NIImageTooSmall'/>
<enum value='1' name='NILOGLEVEL_ERROR'/>
<enum value='5' name='NILOGLEVEL_INFO'/>
<enum value='3' name='NILOGLEVEL_WARNING'/>
<enum value='3' name='UITextAlignmentJustify'/>
<enum value='18' name='UIViewAutoresizingFlexibleDimensions'/>
<enum value='45' name='UIViewAutoresizingFlexibleMargins'/>
<function name='CGRectCenter'>
<arg type='i' declared_type='int' name='rect'/>
<retval type='i' declared_type='int'/>
</function>
<function name='NICellContentPadding'>
<retval type='{UIEdgeInsets=ffff}' declared_type='UIEdgeInsets'/>
</function>
<function name='NICreateNonRetainingMutableArray'>
<retval type='@' declared_type='NSMutableArray*'/>
</function>
<function name='NICreateNonRetainingMutableDictionary'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</function>
<function name='NICreateNonRetainingMutableSet'>
<retval type='@' declared_type='NSMutableSet*'/>
</function>
<function name='NIDeviceOSVersionIsAtLeast'>
<arg type='d' declared_type='double' name='versionNumber'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NIDeviceRotationDuration'>
<arg type='B' declared_type='BOOL' name='isFlippingUpsideDown'/>
<retval type='d' declared_type='NSTimeInterval'/>
</function>
<function name='NIDisableNetworkActivityDebugging'>
<retval type='v' declared_type='void'/>
</function>
<function name='NIEnableNetworkActivityDebugging'>
<retval type='v' declared_type='void'/>
</function>
<function name='NIInterfaceOrientation'>
<retval type='i' declared_type='UIInterfaceOrientation'/>
</function>
<function name='NIIsArrayWithObjects'>
<arg type='@' declared_type='id' name='object'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NIIsPad'>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NIIsSetWithObjects'>
<arg type='@' declared_type='id' name='object'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NIIsStringWithAnyText'>
<arg type='@' declared_type='id' name='object'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NIIsSupportedOrientation'>
<arg type='i' declared_type='UIInterfaceOrientation' name='orientation'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NIMakeNSRangeFromCFRange'>
<arg type='{_CFRange=ii}' declared_type='CFRange' name='range'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</function>
<function name='NINetworkActivityTaskDidFinish'>
<retval type='v' declared_type='void'/>
</function>
<function name='NINetworkActivityTaskDidStart'>
<retval type='v' declared_type='void'/>
</function>
<function name='NIPathForBundleResource'>
<arg type='@' declared_type='NSBundle*' name='bundle'/>
<arg type='@' declared_type='NSString*' name='relativePath'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NIPathForCachesResource'>
<arg type='@' declared_type='NSString*' name='relativePath'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NIPathForDocumentsResource'>
<arg type='@' declared_type='NSString*' name='relativePath'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NIRectContract'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' name='rect'/>
<arg type='f' declared_type='CGFloat' name='dx'/>
<arg type='f' declared_type='CGFloat' name='dy'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</function>
<function name='NIRectShift'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' name='rect'/>
<arg type='f' declared_type='CGFloat' name='dx'/>
<arg type='f' declared_type='CGFloat' name='dy'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</function>
<function name='NIRotateTransformForOrientation'>
<arg type='i' declared_type='UIInterfaceOrientation' name='orientation'/>
<retval type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
</function>
<function name='NIScreenScale'>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='NIStatusBarAnimationCurve'>
<retval type='i' declared_type='UIViewAnimationCurve'/>
</function>
<function name='NIStatusBarAnimationDuration'>
<retval type='d' declared_type='NSTimeInterval'/>
</function>
<function name='NIStatusBarBoundsChangeAnimationCurve'>
<retval type='i' declared_type='UIViewAnimationCurve'/>
</function>
<function name='NIStatusBarBoundsChangeAnimationDuration'>
<retval type='d' declared_type='NSTimeInterval'/>
</function>
<function name='NIStatusBarHeight'>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='NISwapClassMethods'>
<arg type='#' declared_type='Class' name='cls'/>
<arg type=':' declared_type='SEL' name='originalSel'/>
<arg type=':' declared_type='SEL' name='newSel'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NISwapInstanceMethods'>
<arg type='#' declared_type='Class' name='cls'/>
<arg type=':' declared_type='SEL' name='originalSel'/>
<arg type=':' declared_type='SEL' name='newSel'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NIToolbarHeightForOrientation'>
<arg type='i' declared_type='UIInterfaceOrientation' name='orientation'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='NIUIPopoverControllerClass'>
<retval type='#' declared_type='Class'/>
</function>
<function name='NIUITapGestureRecognizerClass'>
<retval type='#' declared_type='Class'/>
</function>
<function name='NewDTBase64Decode'>
<arg type='*' declared_type='char*' name='inputBuffer' const='true'/>
<arg type='L' declared_type='size_t' name='length'/>
<arg type='^I' declared_type='size_t*' name='outputLength'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NewDTBase64Encode'>
<arg type='^v' declared_type='void*' name='inputBuffer' const='true'/>
<arg type='L' declared_type='size_t' name='length'/>
<arg type='B' declared_type='_Bool' name='separateLines'/>
<arg type='^I' declared_type='size_t*' name='outputLength'/>
<retval type='*' declared_type='char*'/>
</function>
<function name='boundf'>
<arg type='f' declared_type='CGFloat' name='value'/>
<arg type='f' declared_type='CGFloat' name='min'/>
<arg type='f' declared_type='CGFloat' name='max'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='boundi'>
<arg type='i' declared_type='NSInteger' name='value'/>
<arg type='i' declared_type='NSInteger' name='min'/>
<arg type='i' declared_type='NSInteger' name='max'/>
<retval type='i' declared_type='NSInteger'/>
</function>
<function name='createEmbeddedObjectRunDelegate'>
<arg type='@' declared_type='id' name='obj'/>
<retval type='^{__CTRunDelegate=}' declared_type='CTRunDelegateRef'/>
</function>
<function name='embeddedObjectDeallocCallback'>
<arg type='^v' declared_type='void*' name='context'/>
<retval type='v' declared_type='void'/>
</function>
<function name='embeddedObjectGetAscentCallback'>
<arg type='^v' declared_type='void*' name='context'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='embeddedObjectGetDescentCallback'>
<arg type='^v' declared_type='void*' name='context'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='embeddedObjectGetWidthCallback'>
<arg type='^v' declared_type='void*' name='context'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='sizeThatFitsKeepingAspectRatio'>
<arg type='i' declared_type='int' name='originalSize'/>
<arg type='i' declared_type='int' name='sizeToFit'/>
<retval type='i' declared_type='int'/>
</function>
<class name='DTAttributedTextCell'>
<method selector='attributedString'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='attributedTextContextView'>
<retval type='@' declared_type='DTAttributedTextContentView*'/>
</method>
<method selector='initWithReuseIdentifier:accessoryType:'>
<arg type='@' index='0' declared_type='NSString*' name='reuseIdentifier'/>
<arg type='@' index='1' declared_type='id' name='accessoryType'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='requiredRowHeightInTableView:'>
<arg type='@' index='0' declared_type='id' name='tableView'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAttributedString:'>
<arg type='@' index='0' declared_type='NSAttributedString*' name='attributedString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTMLString:'>
<arg type='@' index='0' declared_type='NSString*' name='html'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='DTAttributedTextContentView'>
<method selector='attributedString'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='attributedStringSizeThatFits:'>
<arg type='f' index='0' declared_type='CGFloat' name='width'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='backgroundOffset'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='customViews'>
<retval type='@' declared_type='NSMutableSet*'/>
</method>
<method selector='drawDebugFrames'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='edgeInsets'>
<retval type='i' declared_type='int'/>
</method>
<method selector='id'>
<retval type='i' declared_type='int'/>
</method>
<method selector='initWithAttributedString:width:'>
<arg type='@' index='0' declared_type='NSAttributedString*' name='attributedString'/>
<arg type='f' index='1' declared_type='CGFloat' name='width'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layerClass' class_method='true'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='layoutFrame'>
<retval type='@' declared_type='DTCoreTextLayoutFrame*'/>
</method>
<method selector='layoutOffset'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='layoutSubviewsInRect:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='layouter'>
<retval type='@' declared_type='DTCoreTextLayouter*'/>
</method>
<method selector='relayoutText'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllCustomViews'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllCustomViewsForLinks'>
<retval type='v' declared_type='void'/>
</method>
<method selector='selfLock'>
<retval type='^{dispatch_semaphore_s=}' declared_type='dispatch_semaphore_t'/>
</method>
<method selector='setAttributedString:'>
<arg type='@' index='0' declared_type='NSAttributedString*' name='attributedString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundOffset:'>
<arg type='{CGSize=ff}' index='0' declared_type='CGSize' name='backgroundOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCustomViews:'>
<arg type='@' index='0' declared_type='NSMutableSet*' name='customViews'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawDebugFrames:'>
<arg type='B' index='0' declared_type='BOOL' name='drawDebugFrames'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEdgeInsets:'>
<arg type='i' index='0' declared_type='int' name='edgeInsets'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setId:'>
<arg type='i' index='0' declared_type='int' name='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayerClass:' class_method='true'>
<arg type='#' index='0' declared_type='Class' name='layerClass'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayoutFrame:'>
<arg type='@' index='0' declared_type='DTCoreTextLayoutFrame*' name='layoutFrame'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayoutOffset:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='layoutOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayouter:'>
<arg type='@' index='0' declared_type='DTCoreTextLayouter*' name='layouter'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelfLock:'>
<arg type='^{dispatch_semaphore_s=}' index='0' declared_type='dispatch_semaphore_t' name='selfLock'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldDrawImages:'>
<arg type='B' index='0' declared_type='BOOL' name='shouldDrawImages'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldLayoutCustomSubviews:'>
<arg type='B' index='0' declared_type='BOOL' name='shouldLayoutCustomSubviews'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldDrawImages'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='shouldLayoutCustomSubviews'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='suggestedFrameSizeToFitEntireStringConstraintedToWidth:'>
<arg type='f' index='0' declared_type='CGFloat' name='width'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
</class>
<class name='DTAttributedTextView'>
<method selector='UIView'>
<retval type='i' declared_type='int'/>
</method>
<method selector='attributedString'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='contentView'>
<retval type='@' declared_type='DTAttributedTextContentView*'/>
</method>
<method selector='id'>
<retval type='i' declared_type='int'/>
</method>
<method selector='setAttributedString:'>
<arg type='@' index='0' declared_type='NSAttributedString*' name='attributedString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentView:'>
<arg type='@' index='0' declared_type='DTAttributedTextContentView*' name='contentView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setId:'>
<arg type='i' index='0' declared_type='int' name='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUIView:'>
<arg type='i' index='0' declared_type='int' name='UIView'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='DTCSSListStyle'>
<method selector='imageName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='inherit'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithStyles:'>
<arg type='@' index='0' declared_type='NSDictionary*' name='styles'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isOrdered'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='listStylePositionFromString:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<retval type='i' declared_type='DTCSSListStylePosition'/>
</method>
<method selector='listStyleTypeFromString:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<retval type='i' declared_type='DTCSSListStyleType'/>
</method>
<method selector='position'>
<retval type='i' declared_type='DTCSSListStylePosition'/>
</method>
<method selector='prefixWithCounter:'>
<arg type='i' index='0' declared_type='NSInteger' name='counter'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setImageName:'>
<arg type='@' index='0' declared_type='NSString*' name='imageName'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInherit:'>
<arg type='B' index='0' declared_type='BOOL' name='inherit'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg type='i' index='0' declared_type='DTCSSListStylePosition' name='position'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartingItemNumber:'>
<arg type='i' index='0' declared_type='NSInteger' name='itemNum'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setType:'>
<arg type='i' index='0' declared_type='DTCSSListStyleType' name='type'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startingItemNumber'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='type'>
<retval type='i' declared_type='DTCSSListStyleType'/>
</method>
<method selector='updateFromStyleDictionary:'>
<arg type='@' index='0' declared_type='NSDictionary*' name='styles'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='DTCSSStylesheet'>
<method selector='defaultStyleSheet' class_method='true'>
<retval type='@' declared_type='DTCSSStylesheet*'/>
</method>
<method selector='initWithStyleBlock:'>
<arg type='@' index='0' declared_type='NSString*' name='css'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mergeStylesheet:'>
<arg type='@' index='0' declared_type='DTCSSStylesheet*' name='stylesheet'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mergedStyleDictionaryForElement:'>
<arg type='@' index='0' declared_type='DTHTMLElement*' name='element'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='parseStyleBlock:'>
<arg type='@' index='0' declared_type='NSString*' name='css'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='styles'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='DTCoreTextFontCollection'>
<method selector='availableFontsCollection' class_method='true'>
<retval type='@' declared_type='DTCoreTextFontCollection*'/>
</method>
<method selector='fontDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='fontFamilyNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='initWithAvailableFonts'>
<retval type='@' declared_type='id'/>
</method>
<method selector='matchingFontDescriptorForFontDescriptor:'>
<arg type='@' index='0' declared_type='DTCoreTextFontDescriptor*' name='descriptor'/>
<retval type='@' declared_type='DTCoreTextFontDescriptor*'/>
</method>
</class>
<class name='DTCoreTextFontDescriptor'>
<method selector='UIoptimizedTrait'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='boldTrait'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='condensedTrait'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cssStyleRepresentation'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='expandedTrait'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fontAttributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='fontDescriptorForCTFont:' class_method='true'>
<arg type='^{__CTFont=}' index='0' declared_type='CTFontRef' name='ctFont'/>
<retval type='@' declared_type='DTCoreTextFontDescriptor*'/>
</method>
<method selector='fontDescriptorWithFontAttributes:' class_method='true'>
<arg type='@' index='0' declared_type='NSDictionary*' name='attributes'/>
<retval type='@' declared_type='DTCoreTextFontDescriptor*'/>
</method>
<method selector='fontFamily'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fontName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithCTFont:'>
<arg type='^{__CTFont=}' index='0' declared_type='CTFontRef' name='ctFont'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCTFontDescriptor:'>
<arg type='^{__CTFontDescriptor=}' index='0' declared_type='CTFontDescriptorRef' name='ctFontDescriptor'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFontAttributes:'>
<arg type='@' index='0' declared_type='NSDictionary*' name='attributes'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='italicTrait'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='monospaceTrait'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='newMatchingFont'>
<retval type='^{__CTFont=}' declared_type='CTFontRef'/>
</method>
<method selector='overrideFontNameforFontFamily:bold:italic:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='fontFamily'/>
<arg type='B' index='1' declared_type='BOOL' name='bold'/>
<arg type='B' index='2' declared_type='BOOL' name='italic'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pointSize'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setBoldTrait:'>
<arg type='B' index='0' declared_type='BOOL' name='boldTrait'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCondensedTrait:'>
<arg type='B' index='0' declared_type='BOOL' name='condensedTrait'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setExpandedTrait:'>
<arg type='B' index='0' declared_type='BOOL' name='expandedTrait'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontAttributes:'>
<arg type='@' index='0' declared_type='NSDictionary*' name='newAttributes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontFamily:'>
<arg type='@' index='0' declared_type='NSString*' name='fontFamily'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontName:'>
<arg type='@' index='0' declared_type='NSString*' name='fontName'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setItalicTrait:'>
<arg type='B' index='0' declared_type='BOOL' name='italicTrait'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMonospaceTrait:'>
<arg type='B' index='0' declared_type='BOOL' name='monospaceTrait'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOverrideFontName:forFontFamily:bold:italic:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='fontName'/>
<arg type='@' index='1' declared_type='NSString*' name='fontFamily'/>
<arg type='B' index='2' declared_type='BOOL' name='bold'/>
<arg type='B' index='3' declared_type='BOOL' name='italic'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPointSize:'>
<arg type='f' index='0' declared_type='CGFloat' name='pointSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSmallCapsFeature:'>
<arg type='B' index='0' declared_type='BOOL' name='smallCapsFeature'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSmallCapsFontName:forFontFamily:bold:italic:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='fontName'/>
<arg type='@' index='1' declared_type='NSString*' name='fontFamily'/>
<arg type='B' index='2' declared_type='BOOL' name='bold'/>
<arg type='B' index='3' declared_type='BOOL' name='italic'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStylisticClass:'>
<arg type='I' index='0' declared_type='CTFontStylisticClass' name='stylisticClass'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSymbolicTraits:'>
<arg type='I' index='0' declared_type='CTFontSymbolicTraits' name='symbolicTraits'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUIoptimizedTrait:'>
<arg type='B' index='0' declared_type='BOOL' name='UIoptimizedTrait'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVerticalTrait:'>
<arg type='B' index='0' declared_type='BOOL' name='verticalTrait'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='smallCapsFeature'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='smallCapsFontNameforFontFamily:bold:italic:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='fontFamily'/>
<arg type='B' index='1' declared_type='BOOL' name='bold'/>
<arg type='B' index='2' declared_type='BOOL' name='italic'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stylisticClass'>
<retval type='I' declared_type='CTFontStylisticClass'/>
</method>
<method selector='supportsNativeSmallCaps'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='symbolicTraits'>
<retval type='I' declared_type='CTFontSymbolicTraits'/>
</method>
<method selector='verticalTrait'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='DTCoreTextGlyphRun'>
<method selector='ascent'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='attachment'>
<retval type='@' declared_type='DTTextAttachment*'/>
</method>
<method selector='attributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='descent'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='drawInContext:'>
<arg type='^{CGContext=}' index='0' declared_type='CGContextRef' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fixMetricsFromAttachment'>
<retval type='v' declared_type='void'/>
</method>
<method selector='frame'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='frameOfGlyphAtIndex:'>
<arg type='i' index='0' declared_type='NSInteger' name='index'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='imageBoundsInContext:'>
<arg type='^{CGContext=}' index='0' declared_type='CGContextRef' name='context'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='initWithRun:layoutLine:offset:'>
<arg type='^{__CTRun=}' index='0' declared_type='CTRunRef' name='run'/>
<arg type='@' index='1' declared_type='DTCoreTextLayoutLine*' name='layoutLine'/>
<arg type='f' index='2' declared_type='CGFloat' name='offset'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='leading'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='numberOfGlyphs'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='setAttachment:'>
<arg type='@' index='0' declared_type='DTTextAttachment*' name='attachment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributes:'>
<arg type='@' index='0' declared_type='NSDictionary*' name='attributes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringIndices'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='stringRange'>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='width'>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='DTCoreTextLayoutFrame'>
<method selector='attributedStringFragment'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='baselineOriginToPositionLine:afterLine:'>
<arg type='@' index='0' declared_type='DTCoreTextLayoutLine*' name='line'/>
<arg type='@' index='1' declared_type='DTCoreTextLayoutLine*' name='previousLine'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='drawInContext:drawImages:'>
<arg type='^{CGContext=}' index='0' declared_type='CGContextRef' name='context'/>
<arg type='B' index='1' declared_type='BOOL' name='drawImages'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='frame'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='frameOfGlyphAtIndex:'>
<arg type='i' index='0' declared_type='NSInteger' name='index'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='initWithFrame:layouter:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='frame'/>
<arg type='@' index='1' declared_type='DTCoreTextLayouter*' name='layouter'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFrame:layouter:range:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='frame'/>
<arg type='@' index='1' declared_type='DTCoreTextLayouter*' name='layouter'/>
<arg type='{_NSRange=II}' index='2' declared_type='NSRange' name='range'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isLineFirstInParagraph:'>
<arg type='@' index='0' declared_type='DTCoreTextLayoutLine*' name='line'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isLineLastInParagraph:'>
<arg type='@' index='0' declared_type='DTCoreTextLayoutLine*' name='line'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lineContainingIndex:'>
<arg type='I' index='0' declared_type='NSUInteger' name='index'/>
<retval type='@' declared_type='DTCoreTextLayoutLine*'/>
</method>
<method selector='lineIndexForGlyphIndex:'>
<arg type='i' index='0' declared_type='NSInteger' name='index'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='lines'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='linesContainedInRect:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='rect'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='linesInParagraphAtIndex:'>
<arg type='I' index='0' declared_type='NSUInteger' name='index'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='linesVisibleInRect:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='rect'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='paragraphIndexContainingStringIndex:'>
<arg type='I' index='0' declared_type='NSUInteger' name='stringIndex'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='paragraphRangeContainingStringRange:'>
<arg type='{_NSRange=II}' index='0' declared_type='NSRange' name='stringRange'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='paragraphRanges'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setLines:'>
<arg type='@' index='0' declared_type='NSArray*' name='lines'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParagraphRanges:'>
<arg type='@' index='0' declared_type='NSArray*' name='paragraphRanges'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldDrawDebugFrames:' class_method='true'>
<arg type='B' index='0' declared_type='BOOL' name='debugFrames'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextBlockHandler:'>
<arg type='@?' index='0' declared_type='DTCoreTextLayoutFrameTextBlockHandler' name='textBlockHandler' function_pointer='true'>
<arg type='@' declared_type='DTTextBlock*'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
<arg type='^{CGContext=}' declared_type='CGContextRef'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringIndices'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='textAttachments'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='textAttachmentsWithPredicate:'>
<arg type='@' index='0' declared_type='NSPredicate*' name='predicate'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='textBlockHandler'>
<retval type='@?' declared_type='DTCoreTextLayoutFrameTextBlockHandler' function_pointer='true'>
<arg type='@' declared_type='DTTextBlock*'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
<arg type='^{CGContext=}' declared_type='CGContextRef'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='visibleStringRange'>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
</class>
<class name='DTCoreTextLayoutLine'>
<method selector='ascent'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='baselineOrigin'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='correctAttachmentHeights:'>
<arg type='^f' index='0' declared_type='CGFloat*' name='downShift'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='descent'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='drawInContext:'>
<arg type='^{CGContext=}' index='0' declared_type='CGContextRef' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='frame'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='frameOfGlyphAtIndex:'>
<arg type='i' index='0' declared_type='NSInteger' name='index'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='frameOfGlyphsWithRange:'>
<arg type='{_NSRange=II}' index='0' declared_type='NSRange' name='range'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='glyphRuns'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='glyphRunsWithRange:'>
<arg type='{_NSRange=II}' index='0' declared_type='NSRange' name='range'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='imageBoundsInContext:'>
<arg type='^{CGContext=}' index='0' declared_type='CGContextRef' name='context'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='initWithLine:'>
<arg type='^{__CTLine=}' index='0' declared_type='CTLineRef' name='line'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='justifiedLineWithFactor:justificationWidth:'>
<arg type='f' index='0' declared_type='CGFloat' name='justificationFactor'/>
<arg type='f' index='1' declared_type='CGFloat' name='justificationWidth'/>
<retval type='@' declared_type='DTCoreTextLayoutLine*'/>
</method>
<method selector='leading'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='numberOfGlyphs'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='offsetForStringIndex:'>
<arg type='i' index='0' declared_type='NSInteger' name='index'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setAscent:'>
<arg type='f' index='0' declared_type='CGFloat' name='ascent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBaselineOrigin:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='baselineOrigin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrame:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='frame'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGlyphRuns:'>
<arg type='@' index='0' declared_type='NSArray*' name='glyphRuns'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringIndexForPosition:'>
<arg type='{CGPoint=ff}' index='0' declared_type='CGPoint' name='position'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='stringIndices'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='stringRange'>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='trailingWhitespaceWidth'>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='DTCoreTextLayouter'>
<method selector='addTextFrameWithFrame:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='frame'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attributedString'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='framesetter'>
<retval type='^{__CTFramesetter=}' declared_type='CTFramesetterRef'/>
</method>
<method selector='initWithAttributedString:'>
<arg type='@' index='0' declared_type='NSAttributedString*' name='attributedString'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layoutFrameAtIndex:'>
<arg type='i' index='0' declared_type='NSInteger' name='index'/>
<retval type='@' declared_type='DTCoreTextLayoutFrame*'/>
</method>
<method selector='layoutFrameWithRect:range:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect' name='frame'/>
<arg type='{_NSRange=II}' index='1' declared_type='NSRange' name='range'/>
<retval type='@' declared_type='DTCoreTextLayoutFrame*'/>
</method>
<method selector='numberOfFrames'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='setAttributedString:'>
<arg type='@' index='0' declared_type='NSAttributedString*' name='attributedString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='suggestedFrameSizeToFitEntireStringConstraintedToWidth:'>
<arg type='f' index='0' declared_type='CGFloat' name='width'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
</class>
<class name='DTCoreTextParagraphStyle'>
<method selector='addTabStopAtPosition:alignment:'>
<arg type='f' index='0' declared_type='CGFloat' name='position'/>
<arg type='C' index='1' declared_type='CTTextAlignment' name='alignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignment'>
<retval type='C' declared_type='CTTextAlignment'/>
</method>
<method selector='baseWritingDirection'>
<retval type='c' declared_type='CTWritingDirection'/>
</method>
<method selector='createCTParagraphStyle'>
<retval type='^{__CTParagraphStyle=}' declared_type='CTParagraphStyleRef'/>
</method>
<method selector='cssStyleRepresentation'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='defaultParagraphStyle' class_method='true'>
<retval type='@' declared_type='DTCoreTextParagraphStyle*'/>
</method>
<method selector='defaultTabInterval'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='firstLineHeadIndent'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='headIndent'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='initWithCTParagraphStyle:'>
<arg type='^{__CTParagraphStyle=}' index='0' declared_type='CTParagraphStyleRef' name='ctParagraphStyle'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lineHeightMultiple'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='listIndent'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='maximumLineHeight'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='minimumLineHeight'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='paragraphSpacing'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='paragraphSpacingBefore'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='paragraphStyleWithCTParagraphStyle:' class_method='true'>
<arg type='^{__CTParagraphStyle=}' index='0' declared_type='CTParagraphStyleRef' name='ctParagraphStyle'/>
<retval type='@' declared_type='DTCoreTextParagraphStyle*'/>
</method>
<method selector='setAlignment:'>
<arg type='C' index='0' declared_type='CTTextAlignment' name='alignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBaseWritingDirection:'>
<arg type='c' index='0' declared_type='CTWritingDirection' name='baseWritingDirection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultTabInterval:'>
<arg type='f' index='0' declared_type='CGFloat' name='defaultTabInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFirstLineHeadIndent:'>
<arg type='f' index='0' declared_type='CGFloat' name='firstLineHeadIndent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHeadIndent:'>
<arg type='f' index='0' declared_type='CGFloat' name='headIndent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineHeightMultiple:'>
<arg type='f' index='0' declared_type='CGFloat' name='lineHeightMultiple'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setListIndent:'>
<arg type='f' index='0' declared_type='CGFloat' name='listIndent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumLineHeight:'>
<arg type='f' index='0' declared_type='CGFloat' name='maximumLineHeight'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumLineHeight:'>
<arg type='f' index='0' declared_type='CGFloat' name='minimumLineHeight'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParagraphSpacing:'>
<arg type='f' index='0' declared_type='CGFloat' name='paragraphSpacing'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParagraphSpacingBefore:'>
<arg type='f' index='0' declared_type='CGFloat' name='paragraphSpacingBefore'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTabStops:'>
<arg type='@' index='0' declared_type='NSArray*' name='tabStops'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextBlocks:'>
<arg type='@' index='0' declared_type='NSArray*' name='textBlocks'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextLists:'>
<arg type='@' index='0' declared_type='NSArray*' name='textLists'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tabStops'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='textBlocks'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='textLists'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='DTHTMLAttributedStringBuilder'>
<method selector='buildString'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='generatedAttributedString'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='initWithHTML:options:documentAttributes:'>
<arg type='@' index='0' declared_type='NSData*' name='data'/>
<arg type='@' index='1' declared_type='NSDictionary*' name='options'/>
<arg type='^@' index='2' declared_type='NSDictionary**' name='dict'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setWillFlushCallback:'>
<arg type='@?' index='0' declared_type='DTHTMLAttributedStringBuilderWillFlushCallback' name='willFlushCallback' function_pointer='true'>
<arg type='@' declared_type='DTHTMLElement*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='willFlushCallback'>
<retval type='@?' declared_type='DTHTMLAttributedStringBuilderWillFlushCallback' function_pointer='true'>
<arg type='@' declared_type='DTHTMLElement*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
</class>
<class name='DTHTMLElement'>
<method selector='addAdditionalAttribute:forKey:'>
<arg type='@' index='0' declared_type='id' name='attribute'/>
<arg type='@' index='1' declared_type='id' name='key'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addChild:'>
<arg type='@' index='0' declared_type='DTHTMLElement*' name='child'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyStyleDictionary:'>
<arg type='@' index='0' declared_type='NSDictionary*' name='styles'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attributeForKey:'>
<arg type='@' index='0' declared_type='NSString*' name='key'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='attributedString'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='attributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='attributesDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='backgroundColor'>
<retval type='@' declared_type='DTColor*'/>
</method>
<method selector='displayStyle'>
<retval type='i' declared_type='DTHTMLElementDisplayStyle'/>
</method>
<method selector='floatStyle'>
<retval type='i' declared_type='DTHTMLElementFloatStyle'/>
</method>
<method selector='fontDescriptor'>
<retval type='@' declared_type='DTCoreTextFontDescriptor*'/>
</method>
<method selector='fontVariant'>
<retval type='i' declared_type='DTHTMLElementFontVariant'/>
</method>
<method selector='headerLevel'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='isColorInherited'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isContainedInBlockElement'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='link'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='paragraphStyle'>
<retval type='@' declared_type='DTCoreTextParagraphStyle*'/>
</method>
<method selector='parent'>
<retval type='@' declared_type='DTHTMLElement*'/>
</method>
<method selector='parentWithTagName:'>
<arg type='@' index='0' declared_type='NSString*' name='name'/>
<retval type='@' declared_type='DTHTMLElement*'/>
</method>
<method selector='parseStyleString:'>
<arg type='@' index='0' declared_type='NSString*' name='styleString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='path'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='preserveNewlines'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeChild:'>
<arg type='@' index='0' declared_type='DTHTMLElement*' name='child'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributes:'>
<arg type='@' index='0' declared_type='NSDictionary*' name='attributes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundColor:'>
<arg type='@' index='0' declared_type='DTColor*' name='backgroundColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayStyle:'>
<arg type='i' index='0' declared_type='DTHTMLElementDisplayStyle' name='displayStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontDescriptor:'>
<arg type='@' index='0' declared_type='DTCoreTextFontDescriptor*' name='fontDescriptor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontVariant:'>
<arg type='i' index='0' declared_type='DTHTMLElementFontVariant' name='fontVariant'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHeaderLevel:'>
<arg type='i' index='0' declared_type='NSInteger' name='headerLevel'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsColorInherited:'>
<arg type='B' index='0' declared_type='BOOL' name='isColorInherited'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLink:'>
<arg type='@' index='0' declared_type='NSURL*' name='link'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParagraphStyle:'>
<arg type='@' index='0' declared_type='DTCoreTextParagraphStyle*' name='paragraphStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParent:'>
<arg type='@' index='0' declared_type='DTHTMLElement*' name='parent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreserveNewlines:'>
<arg type='B' index='0' declared_type='BOOL' name='preserveNewlines'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShadows:'>
<arg type='@' index='0' declared_type='NSArray*' name='shadows'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSize:'>
<arg type='{CGSize=ff}' index='0' declared_type='CGSize' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStrikeOut:'>
<arg type='B' index='0' declared_type='BOOL' name='strikeOut'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSuperscriptStyle:'>
<arg type='i' index='0' declared_type='NSInteger' name='superscriptStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTagContentInvisible:'>
<arg type='B' index='0' declared_type='BOOL' name='tagContentInvisible'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTagName:'>
<arg type='@' index='0' declared_type='NSString*' name='tagName'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setText:'>
<arg type='@' index='0' declared_type='NSString*' name='text'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttachment:'>
<arg type='@' index='0' declared_type='DTTextAttachment*' name='textAttachment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextColor:'>
<arg type='@' index='0' declared_type='DTColor*' name='textColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextScale:'>
<arg type='f' index='0' declared_type='CGFloat' name='textScale'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUnderlineStyle:'>
<arg type='i' index='0' declared_type='CTUnderlineStyle' name='underlineStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shadows'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='size'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='strikeOut'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='styles'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='superscriptStyle'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='tagContentInvisible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tagName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='text'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='textAttachment'>
<retval type='@' declared_type='DTTextAttachment*'/>
</method>
<method selector='textColor'>
<retval type='@' declared_type='DTColor*'/>
</method>
<method selector='textScale'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='underlineStyle'>
<retval type='i' declared_type='CTUnderlineStyle'/>
</method>
</class>
<class name='DTHTMLParser'>
<method selector='abortParsing'>
<retval type='v' declared_type='void'/>
</method>
<method selector='columnNumber'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:encoding:'>
<arg type='@' index='0' declared_type='NSData*' name='data'/>
<arg type='I' index='1' declared_type='NSStringEncoding' name='encoding'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lineNumber'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='parse'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='parserError'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='publicID'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setDelegate:'>
<arg type='@' index='0' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='systemID'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='DTLazyImageView'>
<method selector='cancelLoading'>
<retval type='v' declared_type='void'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDelegate:'>
<arg type='@' index='0' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldShowProgressiveDownload:'>
<arg type='B' index='0' declared_type='BOOL' name='shouldShowProgressiveDownload'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUrl:'>
<arg type='@' index='0' declared_type='NSURL*' name='url'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldShowProgressiveDownload'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='url'>
<retval type='@' declared_type='NSURL*'/>
</method>
</class>
<class name='DTLinkButton'>
<method selector='GUID'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='minimumHitSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='setGUID:'>
<arg type='@' index='0' declared_type='NSString*' name='GUID'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumHitSize:'>
<arg type='{CGSize=ff}' index='0' declared_type='CGSize' name='minimumHitSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setURL:'>
<arg type='@' index='0' declared_type='NSURL*' name='URL'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='DTTextAttachment'>
<method selector='adjustVerticalAlignmentForFont:'>
<arg type='^{__CTFont=}' index='0' declared_type='CTFontRef' name='font'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ascentForLayout'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='attributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='contentType'>
<retval type='i' declared_type='DTTextAttachmentType'/>
</method>
<method selector='contentURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='contents'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dataURLRepresentation'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descentForLayout'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='displaySize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='hyperLinkGUID'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='hyperLinkURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='originalSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='setAttributes:'>
<arg type='@' index='0' declared_type='NSDictionary*' name='attributes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentType:'>
<arg type='i' index='0' declared_type='DTTextAttachmentType' name='contentType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentURL:'>
<arg type='@' index='0' declared_type='NSURL*' name='contentURL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContents:'>
<arg type='@' index='0' declared_type='id' name='contents'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplaySize:'>
<arg type='{CGSize=ff}' index='0' declared_type='CGSize' name='displaySize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHyperLinkGUID:'>
<arg type='@' index='0' declared_type='NSString*' name='hyperLinkGUID'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHyperLinkURL:'>
<arg type='@' index='0' declared_type='NSURL*' name='hyperLinkURL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOriginalSize:'>
<arg type='{CGSize=ff}' index='0' declared_type='CGSize' name='originalSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVerticalAlignment:'>
<arg type='i' index='0' declared_type='DTTextAttachmentVerticalAlignment' name='verticalAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textAttachmentWithElement:options:' class_method='true'>
<arg type='@' index='0' declared_type='DTHTMLElement*' name='element'/>
<arg type='@' index='1' declared_type='NSDictionary*' name='options'/>
<retval type='@' declared_type='DTTextAttachment*'/>
</method>
<method selector='verticalAlignment'>
<retval type='i' declared_type='DTTextAttachmentVerticalAlignment'/>
</method>
</class>
<class name='DTTextBlock'>
<method selector='backgroundColor'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='padding'>
<retval type='i' declared_type='int'/>
</method>
<method selector='setBackgroundColor:'>
<arg type='^i' index='0' declared_type='int*' name='backgroundColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPadding:'>
<arg type='i' index='0' declared_type='int' name='padding'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='DTWebVideoView'>
<method selector='attachment'>
<retval type='@' declared_type='DTTextAttachment*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAttachment:'>
<arg type='@' index='0' declared_type='DTTextAttachment*' name='attachment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' index='0' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NIAttributedLabel'>
<method selector='addLink:range:'>
<arg type='@' index='0' declared_type='NSURL*' name='urlLink'/>
<arg type='{_NSRange=II}' index='1' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attributedString'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='autoDetectLinks'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='linkColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='linkHighlightColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='linksHaveUnderlines'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeAllExplicitLinks'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributedString:'>
<arg type='@' index='0' declared_type='NSAttributedString*' name='attributedString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutoDetectLinks:'>
<arg type='B' index='0' declared_type='BOOL' name='autoDetectLinks'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' index='0' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFont:range:'>
<arg type='@' index='0' declared_type='UIFont*' name='font'/>
<arg type='{_NSRange=II}' index='1' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLinkColor:'>
<arg type='@' index='0' declared_type='UIColor*' name='linkColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLinkHighlightColor:'>
<arg type='@' index='0' declared_type='UIColor*' name='linkHighlightColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLinksHaveUnderlines:'>
<arg type='B' index='0' declared_type='BOOL' name='linksHaveUnderlines'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStrokeColor:'>
<arg type='@' index='0' declared_type='UIColor*' name='strokeColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStrokeColor:range:'>
<arg type='@' index='0' declared_type='UIColor*' name='color'/>
<arg type='{_NSRange=II}' index='1' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStrokeWidth:'>
<arg type='f' index='0' declared_type='CGFloat' name='strokeWidth'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStrokeWidth:range:'>
<arg type='f' index='0' declared_type='CGFloat' name='width'/>
<arg type='{_NSRange=II}' index='1' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextColor:range:'>
<arg type='@' index='0' declared_type='UIColor*' name='textColor'/>
<arg type='{_NSRange=II}' index='1' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextKern:'>
<arg type='f' index='0' declared_type='CGFloat' name='textKern'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextKern:range:'>
<arg type='f' index='0' declared_type='CGFloat' name='kern'/>
<arg type='{_NSRange=II}' index='1' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUnderlineStyle:'>
<arg type='i' index='0' declared_type='CTUnderlineStyle' name='underlineStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUnderlineStyle:modifier:range:'>
<arg type='i' index='0' declared_type='CTUnderlineStyle' name='style'/>
<arg type='i' index='1' declared_type='CTUnderlineStyleModifiers' name='modifier'/>
<arg type='{_NSRange=II}' index='2' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUnderlineStyleModifier:'>
<arg type='i' index='0' declared_type='CTUnderlineStyleModifiers' name='underlineStyleModifier'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='strokeColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='strokeWidth'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='textKern'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='underlineStyle'>
<retval type='i' declared_type='CTUnderlineStyle'/>
</method>
<method selector='underlineStyleModifier'>
<retval type='i' declared_type='CTUnderlineStyleModifiers'/>
</method>
</class>
<class name='NIImageMemoryCache'>
<method selector='maxNumberOfPixels'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='maxNumberOfPixelsUnderStress'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='numberOfPixels'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='setMaxNumberOfPixels:'>
<arg type='I' index='0' declared_type='NSUInteger' name='maxNumberOfPixels'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxNumberOfPixelsUnderStress:'>
<arg type='I' index='0' declared_type='NSUInteger' name='maxNumberOfPixelsUnderStress'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NILinkedList'>
<method selector='addObject:'>
<arg type='@' index='0' declared_type='id' name='object'/>
<retval type='^v' declared_type='NILinkedListLocation*'/>
</method>
<method selector='addObjectsFromArray:'>
<arg type='@' index='0' declared_type='NSArray*' name='array'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allObjects'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='containsObject:'>
<arg type='@' index='0' declared_type='id' name='anObject'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='firstObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithArray:'>
<arg type='@' index='0' declared_type='NSArray*' name='anArray'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lastObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='linkedList' class_method='true'>
<retval type='@' declared_type='NILinkedList*'/>
</method>
<method selector='linkedListWithArray:' class_method='true'>
<arg type='@' index='0' declared_type='NSArray*' name='array'/>
<retval type='@' declared_type='NILinkedList*'/>
</method>
<method selector='locationOfObject:'>
<arg type='@' index='0' declared_type='id' name='object'/>
<retval type='^v' declared_type='NILinkedListLocation*'/>
</method>
<method selector='objectAtLocation:'>
<arg type='^v' index='0' declared_type='NILinkedListLocation*' name='location'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeFirstObject'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeLastObject'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:'>
<arg type='@' index='0' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectAtLocation:'>
<arg type='^v' index='0' declared_type='NILinkedListLocation*' name='location'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NIMemoryCache'>
<method selector='containsObjectWithName:'>
<arg type='@' index='0' declared_type='NSString*' name='name'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='dateOfLastAccessWithName:'>
<arg type='@' index='0' declared_type='NSString*' name='name'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='didSetObject:withName:'>
<arg type='@' index='0' declared_type='id' name='object'/>
<arg type='@' index='1' declared_type='NSString*' name='name'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithCapacity:'>
<arg type='I' index='0' declared_type='NSUInteger' name='capacity'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='nameOfLeastRecentlyUsedObject'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='nameOfMostRecentlyUsedObject'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='objectWithName:'>
<arg type='@' index='0' declared_type='NSString*' name='name'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='reduceMemoryUsage'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectWithName:'>
<arg type='@' index='0' declared_type='NSString*' name='name'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='storeObject:withName:'>
<arg type='@' index='0' declared_type='id' name='object'/>
<arg type='@' index='1' declared_type='NSString*' name='name'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='storeObject:withName:expiresAfter:'>
<arg type='@' index='0' declared_type='id' name='object'/>
<arg type='@' index='1' declared_type='NSString*' name='name'/>
<arg type='@' index='2' declared_type='NSDate*' name='expirationDate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willRemoveObject:withName:'>
<arg type='@' index='0' declared_type='id' name='object'/>
<arg type='@' index='1' declared_type='NSString*' name='name'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willSetObject:withName:previousObject:'>
<arg type='@' index='0' declared_type='id' name='object'/>
<arg type='@' index='1' declared_type='NSString*' name='name'/>
<arg type='@' index='2' declared_type='id' name='previousObject'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NINavigationAppearance'>
<method selector='clear' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='count' class_method='true'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='popAppearanceForNavigationController:animated:' class_method='true'>
<arg type='@' index='0' declared_type='UINavigationController*' name='navigationController'/>
<arg type='B' index='1' declared_type='BOOL' name='animated'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pushAppearanceForNavigationController:' class_method='true'>
<arg type='@' index='0' declared_type='UINavigationController*' name='navigationController'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NINetworkRequestOperation'>
<method selector='cachePolicy'>
<retval type='I' declared_type='NSURLRequestCachePolicy'/>
</method>
<method selector='data'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='initWithURL:'>
<arg type='@' index='0' declared_type='NSURL*' name='url'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='processedObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setCachePolicy:'>
<arg type='I' index='0' declared_type='NSURLRequestCachePolicy' name='cachePolicy'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setData:'>
<arg type='@' index='0' declared_type='NSData*' name='data'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProcessedObject:'>
<arg type='@' index='0' declared_type='id' name='processedObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeout:'>
<arg type='d' index='0' declared_type='NSTimeInterval' name='timeout'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUrl:'>
<arg type='@' index='0' declared_type='NSURL*' name='url'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='timeout'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='url'>
<retval type='@' declared_type='NSURL*'/>
</method>
</class>
<class name='NIOperation'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='didFailWithError:'>
<arg type='@' index='0' declared_type='NSError*' name='error'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didFailWithErrorBlock'>
<retval type='@?' declared_type='NIErrorBlock' function_pointer='true'>
<arg type='@' declared_type='NIOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='didFinish'>
<retval type='v' declared_type='void'/>
</method>
<method selector='didFinishBlock'>
<retval type='@?' declared_type='NIBasicBlock' function_pointer='true'>
<arg type='@' declared_type='NIOperation*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='didStart'>
<retval type='v' declared_type='void'/>
</method>
<method selector='didStartBlock'>
<retval type='@?' declared_type='NIBasicBlock' function_pointer='true'>
<arg type='@' declared_type='NIOperation*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='lastError'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='setDelegate:'>
<arg type='@' index='0' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDidFailWithErrorBlock:'>
<arg type='@?' index='0' declared_type='NIErrorBlock' name='didFailWithErrorBlock' function_pointer='true'>
<arg type='@' declared_type='NIOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDidFinishBlock:'>
<arg type='@?' index='0' declared_type='NIBasicBlock' name='didFinishBlock' function_pointer='true'>
<arg type='@' declared_type='NIOperation*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDidStartBlock:'>
<arg type='@?' index='0' declared_type='NIBasicBlock' name='didStartBlock' function_pointer='true'>
<arg type='@' declared_type='NIOperation*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLastError:'>
<arg type='@' index='0' declared_type='NSError*' name='lastError'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTag:'>
<arg type='i' index='0' declared_type='NSInteger' name='tag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWillFinishBlock:'>
<arg type='@?' index='0' declared_type='NIBasicBlock' name='willFinishBlock' function_pointer='true'>
<arg type='@' declared_type='NIOperation*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='tag'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='willFinish'>
<retval type='v' declared_type='void'/>
</method>
<method selector='willFinishBlock'>
<retval type='@?' declared_type='NIBasicBlock' function_pointer='true'>
<arg type='@' declared_type='NIOperation*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
</class>
<class name='NIViewRecycler'>
<method selector='dequeueReusableViewWithIdentifier:'>
<arg type='@' index='0' declared_type='NSString*' name='reuseIdentifier'/>
<retval type='@' declared_type='UIView*'/>
</method>
<method selector='recycleView:'>
<arg type='@' index='0' declared_type='UIView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllViews'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSAttributedString'>
<method selector='htmlString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithHTML:baseURL:documentAttributes:'>
<arg type='@' index='0' declared_type='NSData*' name='data'/>
<arg type='@' index='1' declared_type='NSURL*' name='base'/>
<arg type='^@' index='2' declared_type='NSDictionary**' name='dict'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithHTML:documentAttributes:'>
<arg type='@' index='0' declared_type='NSData*' name='data'/>
<arg type='^@' index='1' declared_type='NSDictionary**' name='dict'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithHTML:options:documentAttributes:'>
<arg type='@' index='0' declared_type='NSData*' name='data'/>
<arg type='@' index='1' declared_type='NSDictionary*' name='options'/>
<arg type='^@' index='2' declared_type='NSDictionary**' name='dict'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemNumberInTextList:atIndex:'>
<arg type='@' index='0' declared_type='DTCSSListStyle*' name='list'/>
<arg type='I' index='1' declared_type='NSUInteger' name='location'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='plainTextString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='prefixForListItemWithCounter:listStyle:attributes:' class_method='true'>
<arg type='I' index='0' declared_type='NSUInteger' name='listCounter'/>
<arg type='@' index='1' declared_type='DTCSSListStyle*' name='listStyle'/>
<arg type='@' index='2' declared_type='NSDictionary*' name='attributes'/>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='rangeOfTextBlock:atIndex:'>
<arg type='@' index='0' declared_type='DTTextBlock*' name='textBlock'/>
<arg type='I' index='1' declared_type='NSUInteger' name='location'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfTextList:atIndex:'>
<arg type='@' index='0' declared_type='DTCSSListStyle*' name='list'/>
<arg type='I' index='1' declared_type='NSUInteger' name='location'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='synthesizedSmallCapsAttributedStringWithText:attributes:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='text'/>
<arg type='@' index='1' declared_type='NSDictionary*' name='attributes'/>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='textAttachmentsWithPredicate:'>
<arg type='@' index='0' declared_type='NSPredicate*' name='predicate'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSCharacterSet'>
<method selector='cssStyleAttributeNameCharacterSet' class_method='true'>
<retval type='@' declared_type='NSCharacterSet*'/>
</method>
<method selector='nonQuotedAttributeEndCharacterSet' class_method='true'>
<retval type='@' declared_type='NSCharacterSet*'/>
</method>
<method selector='quoteCharacterSet' class_method='true'>
<retval type='@' declared_type='NSCharacterSet*'/>
</method>
<method selector='tagAttributeNameCharacterSet' class_method='true'>
<retval type='@' declared_type='NSCharacterSet*'/>
</method>
<method selector='tagNameCharacterSet' class_method='true'>
<retval type='@' declared_type='NSCharacterSet*'/>
</method>
</class>
<class name='NSData'>
<method selector='base64EncodedString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dataFromBase64String:' class_method='true'>
<arg type='@' index='0' declared_type='NSString*' name='aString'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='md5Hash'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='sha1Hash'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSMutableAttributedString'>
<method selector='appendNakedString:'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendString:'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendString:withParagraphStyle:fontDescriptor:'>
<arg type='@' index='0' declared_type='NSString*' name='string'/>
<arg type='@' index='1' declared_type='DTCoreTextParagraphStyle*' name='paragraphStyle'/>
<arg type='@' index='2' declared_type='DTCoreTextFontDescriptor*' name='fontDescriptor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFont:'>
<arg type='@' index='0' declared_type='UIFont*' name='font'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFont:range:'>
<arg type='@' index='0' declared_type='UIFont*' name='font'/>
<arg type='{_NSRange=II}' index='1' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKern:'>
<arg type='f' index='0' declared_type='CGFloat' name='kern'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKern:range:'>
<arg type='f' index='0' declared_type='CGFloat' name='kern'/>
<arg type='{_NSRange=II}' index='1' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStrokeColor:'>
<arg type='@' index='0' declared_type='UIColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStrokeColor:range:'>
<arg type='@' index='0' declared_type='UIColor*' name='color'/>
<arg type='{_NSRange=II}' index='1' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStrokeWidth:'>
<arg type='f' index='0' declared_type='CGFloat' name='width'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStrokeWidth:range:'>
<arg type='f' index='0' declared_type='CGFloat' name='width'/>
<arg type='{_NSRange=II}' index='1' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAlignment:lineBreakMode:'>
<arg type='C' index='0' declared_type='CTTextAlignment' name='textAlignment'/>
<arg type='C' index='1' declared_type='CTLineBreakMode' name='lineBreakMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAlignment:lineBreakMode:range:'>
<arg type='C' index='0' declared_type='CTTextAlignment' name='textAlignment'/>
<arg type='C' index='1' declared_type='CTLineBreakMode' name='lineBreakMode'/>
<arg type='{_NSRange=II}' index='2' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextColor:'>
<arg type='@' index='0' declared_type='UIColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextColor:range:'>
<arg type='@' index='0' declared_type='UIColor*' name='color'/>
<arg type='{_NSRange=II}' index='1' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUnderlineStyle:modifier:'>
<arg type='i' index='0' declared_type='CTUnderlineStyle' name='style'/>
<arg type='i' index='1' declared_type='CTUnderlineStyleModifiers' name='modifier'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUnderlineStyle:modifier:range:'>
<arg type='i' index='0' declared_type='CTUnderlineStyle' name='style'/>
<arg type='i' index='1' declared_type='CTUnderlineStyleModifiers' name='modifier'/>
<arg type='{_NSRange=II}' index='2' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableString'>
<method selector='removeTrailingWhitespace'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSObject'>
<method selector='attributedLabel:didSelectLink:atPoint:'>
<arg type='@' index='0' declared_type='NIAttributedLabel*' name='attributedLabel'/>
<arg type='@' index='1' declared_type='NSURL*' name='url'/>
<arg type='{CGPoint=ff}' index='2' declared_type='CGPoint' name='point'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attributedTextContentView:didDrawLayoutFrame:inContext:'>
<arg type='@' index='0' declared_type='DTAttributedTextContentView*' name='attributedTextContentView'/>
<arg type='@' index='1' declared_type='DTCoreTextLayoutFrame*' name='layoutFrame'/>
<arg type='^{CGContext=}' index='2' declared_type='CGContextRef' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attributedTextContentView:shouldDrawBackgroundForTextBlock:frame:context:forLayoutFrame:'>
<arg type='@' index='0' declared_type='DTAttributedTextContentView*' name='attributedTextContentView'/>
<arg type='@' index='1' declared_type='DTTextBlock*' name='textBlock'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='2' declared_type='CGRect' name='frame'/>
<arg type='^{CGContext=}' index='3' declared_type='CGContextRef' name='context'/>
<arg type='@' index='4' declared_type='DTCoreTextLayoutFrame*' name='layoutFrame'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='attributedTextContentView:viewForAttachment:frame:'>
<arg type='@' index='0' declared_type='DTAttributedTextContentView*' name='attributedTextContentView'/>
<arg type='@' index='1' declared_type='DTTextAttachment*' name='attachment'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='2' declared_type='CGRect' name='frame'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='attributedTextContentView:viewForAttributedString:frame:'>
<arg type='@' index='0' declared_type='DTAttributedTextContentView*' name='attributedTextContentView'/>
<arg type='@' index='1' declared_type='NSAttributedString*' name='string'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='2' declared_type='CGRect' name='frame'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='attributedTextContentView:viewForLink:identifier:frame:'>
<arg type='@' index='0' declared_type='DTAttributedTextContentView*' name='attributedTextContentView'/>
<arg type='@' index='1' declared_type='NSURL*' name='url'/>
<arg type='@' index='2' declared_type='NSString*' name='identifier'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='3' declared_type='CGRect' name='frame'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lazyImageView:didChangeImageSize:'>
<arg type='@' index='0' declared_type='DTLazyImageView*' name='lazyImageView'/>
<arg type='{CGSize=ff}' index='1' declared_type='CGSize' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='nimbusOperationDidFail:withError:'>
<arg type='@' index='0' declared_type='NIOperation*' name='operation'/>
<arg type='@' index='1' declared_type='NSError*' name='error'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='nimbusOperationDidFinish:'>
<arg type='@' index='0' declared_type='NIOperation*' name='operation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='nimbusOperationDidStart:'>
<arg type='@' index='0' declared_type='NIOperation*' name='operation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='nimbusOperationWillFinish:'>
<arg type='@' index='0' declared_type='NIOperation*' name='operation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:didEndElement:'>
<arg type='@' index='0' declared_type='DTHTMLParser*' name='parser'/>
<arg type='@' index='1' declared_type='NSString*' name='elementName'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:didStartElement:attributes:'>
<arg type='@' index='0' declared_type='DTHTMLParser*' name='parser'/>
<arg type='@' index='1' declared_type='NSString*' name='elementName'/>
<arg type='@' index='2' declared_type='NSDictionary*' name='attributeDict'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundCDATA:'>
<arg type='@' index='0' declared_type='DTHTMLParser*' name='parser'/>
<arg type='@' index='1' declared_type='NSData*' name='CDATABlock'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundCharacters:'>
<arg type='@' index='0' declared_type='DTHTMLParser*' name='parser'/>
<arg type='@' index='1' declared_type='NSString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundComment:'>
<arg type='@' index='0' declared_type='DTHTMLParser*' name='parser'/>
<arg type='@' index='1' declared_type='NSString*' name='comment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:parseErrorOccurred:'>
<arg type='@' index='0' declared_type='DTHTMLParser*' name='parser'/>
<arg type='@' index='1' declared_type='NSError*' name='parseError'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parserDidEndDocument:'>
<arg type='@' index='0' declared_type='DTHTMLParser*' name='parser'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parserDidStartDocument:'>
<arg type='@' index='0' declared_type='DTHTMLParser*' name='parser'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='prepareForReuse'>
<retval type='v' declared_type='void'/>
</method>
<method selector='reuseIdentifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setReuseIdentifier:'>
<arg type='@' index='0' declared_type='NSString*' name='reuseIdentifier'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='videoView:shouldOpenExternalURL:'>
<arg type='@' index='0' declared_type='DTWebVideoView*' name='videoView'/>
<arg type='@' index='1' declared_type='NSURL*' name='url'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSScanner'>
<method selector='logPosition'>
<retval type='v' declared_type='void'/>
</method>
<method selector='scanCSSAttribute:value:'>
<arg type='^@' index='0' declared_type='NSString**' name='name'/>
<arg type='^@' index='1' declared_type='NSString**' name='value'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanCSSURL:'>
<arg type='^@' index='0' declared_type='NSString**' name='urlString'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanDOCTYPE:'>
<arg type='^@' index='0' declared_type='NSString**' name='contents'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanHTMLColor:'>
<arg type='^@' index='0' declared_type='DTColor**' name='color'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanHTMLTag:attributes:isOpen:isClosed:'>
<arg type='^@' index='0' declared_type='NSString**' name='tagName'/>
<arg type='^@' index='1' declared_type='NSDictionary**' name='attributes'/>
<arg type='^B' index='2' declared_type='BOOL*' name='isOpen'/>
<arg type='^B' index='3' declared_type='BOOL*' name='isClosed'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSString'>
<method selector='CSSpixelSize'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='arrayOfCSSShadowsWithCurrentTextSize:currentColor:'>
<arg type='f' index='0' declared_type='CGFloat' name='textSize'/>
<arg type='@' index='1' declared_type='DTColor*' name='color'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='dictionaryOfCSSStyles'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='guid' class_method='true'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='hasPrefixCharacterFromSet:'>
<arg type='@' index='0' declared_type='NSCharacterSet*' name='characterSet'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasSuffixCharacterFromSet:'>
<arg type='@' index='0' declared_type='NSCharacterSet*' name='characterSet'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='heightWithFont:constrainedToWidth:lineBreakMode:'>
<arg type='@' index='0' declared_type='UIFont*' name='font'/>
<arg type='f' index='1' declared_type='CGFloat' name='width'/>
<arg type='i' index='2' declared_type='UILineBreakMode' name='lineBreakMode'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='indexIsAtBeginningOfParagraph:'>
<arg type='I' index='0' declared_type='NSUInteger' name='index'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithPotentiallyMalformedUTF8Data:'>
<arg type='@' index='0' declared_type='NSData*' name='data'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='integerValueFromHex'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='isNumeric'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isWhitespaceAndNewlines'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='md5Hash'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='percentValue'>
<retval type='f' declared_type='float'/>
</method>
<method selector='pixelSizeOfCSSMeasureRelativeToCurrentTextSize:'>
<arg type='f' index='0' declared_type='CGFloat' name='textSize'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='queryContentsUsingEncoding:'>
<arg type='I' index='0' declared_type='NSStringEncoding' name='encoding'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='rangeOfParagraphAtIndex:'>
<arg type='I' index='0' declared_type='NSUInteger' name='index'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfParagraphsContainingRange:parBegIndex:parEndIndex:'>
<arg type='{_NSRange=II}' index='0' declared_type='NSRange' name='range'/>
<arg type='^I' index='1' declared_type='NSUInteger*' name='parBegIndex'/>
<arg type='^I' index='2' declared_type='NSUInteger*' name='parEndIndex'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='sha1Hash'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByAddingHTMLEntities'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByAddingPercentEscapesForURLParameter'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByAddingQueryDictionary:'>
<arg type='@' index='0' declared_type='NSDictionary*' name='query'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByNormalizingWhitespace'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByReplacingHTMLEntities'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='versionStringCompare:'>
<arg type='@' index='0' declared_type='NSString*' name='other'/>
<retval type='i' declared_type='NSComparisonResult'/>
</method>
</class>
<class name='Nimbus'>
<method selector='imageMemoryCache' class_method='true'>
<retval type='@' declared_type='NIImageMemoryCache*'/>
</method>
<method selector='networkOperationQueue' class_method='true'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method selector='setImageMemoryCache:' class_method='true'>
<arg type='@' index='0' declared_type='NIImageMemoryCache*' name='imageMemoryCache'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNetworkOperationQueue:' class_method='true'>
<arg type='@' index='0' declared_type='NSOperationQueue*' name='queue'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UIDevice'>
<method selector='osVersion'>
<retval type='{_DTVersion=iii}' declared_type='DTVersion'/>
</method>
</class>
<class name='UIView'>
<method selector='centerWithin:'>
<arg type='@' index='0' declared_type='UIView*' name='otherView'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<informal_protocol name='DTAttributedTextContentViewDelegate'>
<method type='v20@0:4@8@12^{CGContext=}16' selector='attributedTextContentView:didDrawLayoutFrame:inContext:'>
<arg type='@' index='0' declared_type='DTAttributedTextContentView*' name='attributedTextContentView'/>
<arg type='@' index='1' declared_type='DTCoreTextLayoutFrame*' name='layoutFrame'/>
<arg type='^{CGContext=}' index='2' declared_type='CGContextRef' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B40@0:4@8@12{CGRect={CGPoint=ff}{CGSize=ff}}16^{CGContext=}32@36' selector='attributedTextContentView:shouldDrawBackgroundForTextBlock:frame:context:forLayoutFrame:'>
<arg type='@' index='0' declared_type='DTAttributedTextContentView*' name='attributedTextContentView'/>
<arg type='@' index='1' declared_type='DTTextBlock*' name='textBlock'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='2' declared_type='CGRect' name='frame'/>
<arg type='^{CGContext=}' index='3' declared_type='CGContextRef' name='context'/>
<arg type='@' index='4' declared_type='DTCoreTextLayoutFrame*' name='layoutFrame'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='@32@0:4@8@12{CGRect={CGPoint=ff}{CGSize=ff}}16' selector='attributedTextContentView:viewForAttachment:frame:'>
<arg type='@' index='0' declared_type='DTAttributedTextContentView*' name='attributedTextContentView'/>
<arg type='@' index='1' declared_type='DTTextAttachment*' name='attachment'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='2' declared_type='CGRect' name='frame'/>
<retval type='@' declared_type='id'/>
</method>
<method type='@32@0:4@8@12{CGRect={CGPoint=ff}{CGSize=ff}}16' selector='attributedTextContentView:viewForAttributedString:frame:'>
<arg type='@' index='0' declared_type='DTAttributedTextContentView*' name='attributedTextContentView'/>
<arg type='@' index='1' declared_type='NSAttributedString*' name='string'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='2' declared_type='CGRect' name='frame'/>
<retval type='@' declared_type='id'/>
</method>
<method type='@36@0:4@8@12@16{CGRect={CGPoint=ff}{CGSize=ff}}20' selector='attributedTextContentView:viewForLink:identifier:frame:'>
<arg type='@' index='0' declared_type='DTAttributedTextContentView*' name='attributedTextContentView'/>
<arg type='@' index='1' declared_type='NSURL*' name='url'/>
<arg type='@' index='2' declared_type='NSString*' name='identifier'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='3' declared_type='CGRect' name='frame'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='DTHTMLParserDelegate'>
<method type='v16@0:4@8@12' selector='parser:didEndElement:'>
<arg type='@' index='0' declared_type='DTHTMLParser*' name='parser'/>
<arg type='@' index='1' declared_type='NSString*' name='elementName'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12@16' selector='parser:didStartElement:attributes:'>
<arg type='@' index='0' declared_type='DTHTMLParser*' name='parser'/>
<arg type='@' index='1' declared_type='NSString*' name='elementName'/>
<arg type='@' index='2' declared_type='NSDictionary*' name='attributeDict'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='parser:foundCDATA:'>
<arg type='@' index='0' declared_type='DTHTMLParser*' name='parser'/>
<arg type='@' index='1' declared_type='NSData*' name='CDATABlock'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='parser:foundCharacters:'>
<arg type='@' index='0' declared_type='DTHTMLParser*' name='parser'/>
<arg type='@' index='1' declared_type='NSString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='parser:foundComment:'>
<arg type='@' index='0' declared_type='DTHTMLParser*' name='parser'/>
<arg type='@' index='1' declared_type='NSString*' name='comment'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='parser:parseErrorOccurred:'>
<arg type='@' index='0' declared_type='DTHTMLParser*' name='parser'/>
<arg type='@' index='1' declared_type='NSError*' name='parseError'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='parserDidEndDocument:'>
<arg type='@' index='0' declared_type='DTHTMLParser*' name='parser'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='parserDidStartDocument:'>
<arg type='@' index='0' declared_type='DTHTMLParser*' name='parser'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='DTLazyImageViewDelegate'>
<method type='v20@0:4@8{CGSize=ff}12' selector='lazyImageView:didChangeImageSize:'>
<arg type='@' index='0' declared_type='DTLazyImageView*' name='lazyImageView'/>
<arg type='{CGSize=ff}' index='1' declared_type='CGSize' name='size'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='DTWebVideoViewDelegate'>
<method type='B16@0:4@8@12' selector='videoView:shouldOpenExternalURL:'>
<arg type='@' index='0' declared_type='DTWebVideoView*' name='videoView'/>
<arg type='@' index='1' declared_type='NSURL*' name='url'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NIAttributedLabelDelegate'>
<method type='v24@0:4@8@12{CGPoint=ff}16' selector='attributedLabel:didSelectLink:atPoint:'>
<arg type='@' index='0' declared_type='NIAttributedLabel*' name='attributedLabel'/>
<arg type='@' index='1' declared_type='NSURL*' name='url'/>
<arg type='{CGPoint=ff}' index='2' declared_type='CGPoint' name='point'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NIOperationDelegate'>
<method type='v16@0:4@8@12' selector='nimbusOperationDidFail:withError:'>
<arg type='@' index='0' declared_type='NIOperation*' name='operation'/>
<arg type='@' index='1' declared_type='NSError*' name='error'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='nimbusOperationDidFinish:'>
<arg type='@' index='0' declared_type='NIOperation*' name='operation'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='nimbusOperationDidStart:'>
<arg type='@' index='0' declared_type='NIOperation*' name='operation'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='nimbusOperationWillFinish:'>
<arg type='@' index='0' declared_type='NIOperation*' name='operation'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NIRecyclableView'>
<method type='v8@0:4' selector='prepareForReuse'>
<retval type='v' declared_type='void'/>
</method>
<method type='@8@0:4' selector='reuseIdentifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method type='v12@0:4@8' selector='setReuseIdentifier:'>
<arg type='@' index='0' declared_type='NSString*' name='reuseIdentifier'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
</signatures>
